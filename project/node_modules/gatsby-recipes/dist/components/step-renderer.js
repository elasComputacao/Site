"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@mdx-js/react");

var _inputProvider = require("../renderer/input-provider");

var _resourceProvider = require("../renderer/resource-provider");

var _providerProvider = require("../renderer/provider-provider");

const transformCodeForEval = jsx => `${jsx}

  return React.createElement(MDXProvider, { components },
    React.createElement(MDXContent, props)
  );`;

var _default = ({
  children: srcCode,
  scope,
  components,
  ...props
}) => {
  const fullScope = {
    mdx: _react2.mdx,
    MDXProvider: _react2.MDXProvider,
    React: _react.default,
    // need to pass both so that we can guarantee the components we need are passed to MDXProvider for shortcodes and we also need some components to be in direct scope
    ...components,
    components,
    props,
    useInput: _inputProvider.useInput,
    useInputByKey: _inputProvider.useInputByKey,
    useResource: _resourceProvider.useResource,
    useProvider: _providerProvider.useProvider,
    ...scope
  };
  const scopeKeys = Object.keys(fullScope);
  const scopeValues = Object.values(fullScope);
  const fn = new Function(...scopeKeys, transformCodeForEval(srcCode));
  return fn(...scopeValues);
};

exports.default = _default;